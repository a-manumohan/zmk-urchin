/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping-term-ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };

        combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };

        combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };

        combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };

        combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };

        Bootloader {
            bindings = <&bootloader>;
            key-positions = <0 9>;
            layers = <4>;
        };

        mo_settings {
            bindings = <&mo 4>;
            key-positions = <32 31>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp Q    &kp W    &kp F    &kp P    &kp B             &kp J        &kp L    &kp U        &kp Y      &kp SINGLE_QUOTE
&kp A    &kp R    &kp S    &kp T    &kp G             &kp M        &kp N    &kp E        &kp I      &kp O
&kp Z    &kp X    &kp C    &kp D    &kp V             &kp K        &kp H    &kp COMMA    &kp DOT    &kp SEMICOLON
                           &mo 2    &kp LEFT_SHIFT    &kp SPACE    &mo 1
            >;

            label = "base";
        };

        sym {
            label = "Sym";
            bindings = <
&kp ESCAPE    &kp LEFT_BRACKET    &kp LEFT_BRACE    &kp LEFT_PARENTHESIS    &kp TILDE         &kp CARET    &kp RIGHT_PARENTHESIS    &kp RIGHT_BRACE    &kp RIGHT_BRACKET    &kp GRAVE
&kp MINUS     &kp ASTERISK        &kp EQUAL         &kp UNDERSCORE          &kp DOLLAR        &kp HASH     &sk RIGHT_GUI            &sk RIGHT_ALT      &sk RIGHT_CONTROL    &sk RIGHT_SHIFT
&kp PLUS      &kp PIPE            &kp AT_SIGN       &kp SLASH               &kp PERCENT       &kp MINUS    &kp BACKSLASH            &kp AMPERSAND      &kp QUESTION         &kp EXCLAMATION
                                                    &mo 2                   &kp LEFT_SHIFT    &kp SPACE    &mo 1
            >;
        };

        nav {
            bindings = <
&kp TAB           &kp LG(TAB)      &kp LG(LA(LEFT))    &kp LG(LA(RIGHT))    &kp C_VOLUME_UP      &kp C_RESET     &kp AMPS         &kp UP         &kp HOME     &kp LC(BACKSPACE)
&sk LEFT_SHIFT    &sk LCTRL        &sk LEFT_ALT        &sk LEFT_GUI         &kp C_VOLUME_DOWN    &kp CAPSLOCK    &kp LEFT         &kp DOWN       &kp RIGHT    &kp BACKSPACE
&kp LA(LG(L))     &kp LG(SPACE)    &kp K_BACK          &kp K_FORWARD        &kp K_PLAY_PAUSE     &kp UNDER       &kp PAGE_DOWN    &kp PAGE_UP    &kp END      &kp ENTER
                                                       &mo 2                &kp LEFT_SHIFT       &kp SPACE       &mo 1
            >;

            label = "nav";
        };

        num {
            label = "Num";
            bindings = <
&kp TAB           &kp NUMBER_7    &kp NUMBER_8    &kp N9          &kp LG(W)         &kp F12      &kp F7    &kp F8    &kp F9    &kp LC(BACKSPACE)
&sk LEFT_SHIFT    &kp NUMBER_4    &kp NUMBER_5    &kp NUMBER_6    &kp LC(LG(L))     &kp F11      &kp F4    &kp F5    &kp F6    &kp BACKSPACE
&kp NUMBER_0      &kp NUMBER_1    &kp NUMBER_2    &kp NUMBER_3    &trans            &kp F10      &kp F1    &kp F2    &kp F3    &kp ENTER
                                                  &trans          &kp LEFT_SHIFT    &kp SPACE    &trans
            >;
        };

        settings {
            label = "Sett";
            bindings = <
&trans    &trans    &trans    &trans    &bt BT_CLR_ALL    &bt BT_SEL 0    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &bt BT_SEL 4      &bt BT_SEL 1    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &bt BT_SEL 3      &bt BT_SEL 2    &trans    &trans    &trans    &trans
                              &trans    &trans            &trans          &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        num {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
